<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="dbg_csp_transfer_main_services_pushbuttons" Id="{8b91984b-920f-443a-87d2-ad4bb7b86145}" SpecialFunc="None">
    <Declaration><![CDATA[
(********************* G.D S.p.A. - Technical Department ***********************************
This program has been generated automatically from Application Designer DE&F
********************************************************************************************)
PROGRAM dbg_csp_transfer_main_services_pushbuttons
VAR
  emergency_close_di_shd : digital_input_shadow;
  emergency_close_lamp_do_shd : digital_output_shadow;
  emergency_open_di_shd : digital_input_shadow;
  emergency_open_lamp_do_shd : digital_output_shadow;
  reset_di_shd : digital_input_shadow;
  reset_lamp_do_shd : digital_output_shadow;
  start_di_shd : digital_input_shadow;
  start_lamp_do_shd : digital_output_shadow;
  stop_dchk_shd : digital_check_shadow;
  stop_di_shd : digital_input_shadow;
  stop_lamp_do_shd : digital_output_shadow;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[_objects_manager();

IF	g_application_status <> APPLICATION_STATUS_RUNNING
THEN
	RETURN;
END_IF

CASE process_get_mode(CONVERSION_this := dbg_root.prc) OF
	MODE_ABSENT,
	MODE_INACTIVE:
		RETURN;
	MODE_TEST:
		RETURN;
END_CASE


]]></ST>
    </Implementation>
    <Action Name="_objects_manager" Id="{6eca7d83-b943-4fe8-8cd2-ecc27a08d234}">
      <Implementation>
        <ST><![CDATA[IF	objects_initialization()
THEN
	digital_input_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.emergency_close_di, 
		process:= dbg_root.prc, 
		CONVERSION_this:= emergency_close_di_shd);

	digital_output_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.emergency_close_lamp_do, 
		process:= dbg_root.prc, 
		CONVERSION_this:= emergency_close_lamp_do_shd);

	digital_input_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.emergency_open_di, 
		process:= dbg_root.prc, 
		CONVERSION_this:= emergency_open_di_shd);

	digital_output_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.emergency_open_lamp_do, 
		process:= dbg_root.prc, 
		CONVERSION_this:= emergency_open_lamp_do_shd);

	digital_input_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.reset_di, 
		process:= dbg_root.prc, 
		CONVERSION_this:= reset_di_shd);

	digital_output_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.reset_lamp_do, 
		process:= dbg_root.prc, 
		CONVERSION_this:= reset_lamp_do_shd);

	digital_input_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.start_di, 
		process:= dbg_root.prc, 
		CONVERSION_this:= start_di_shd);

	digital_output_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.start_lamp_do, 
		process:= dbg_root.prc, 
		CONVERSION_this:= start_lamp_do_shd);

	digital_check_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.stop_dchk, 
		process:= dbg_root.prc, 
		CONVERSION_this:= stop_dchk_shd);

	digital_input_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.stop_di, 
		process:= dbg_root.prc, 
		CONVERSION_this:= stop_di_shd);

	digital_output_shadow_init(
		sim_mode:= SHADOW_SIMULATION_MODE_AUTOMATIC, 
		father:= csp_transfer_main_services_pushbuttons.stop_lamp_do, 
		process:= dbg_root.prc, 
		CONVERSION_this:= stop_lamp_do_shd);

	RETURN;
END_IF

IF	objects_running()
THEN
	digital_input_shadow_cycle(emergency_close_di_shd);
	digital_output_shadow_cycle(emergency_close_lamp_do_shd);
	digital_input_shadow_cycle(emergency_open_di_shd);
	digital_output_shadow_cycle(emergency_open_lamp_do_shd);
	digital_input_shadow_cycle(reset_di_shd);
	digital_output_shadow_cycle(reset_lamp_do_shd);
	digital_input_shadow_cycle(start_di_shd);
	digital_output_shadow_cycle(start_lamp_do_shd);
	digital_check_shadow_cycle(stop_dchk_shd);
	digital_input_shadow_cycle(stop_di_shd);
	digital_output_shadow_cycle(stop_lamp_do_shd);
END_IF]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>