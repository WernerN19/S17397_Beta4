<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="csp_transfer_main_safety_drives_commonConfiguration" Id="{f9024c8c-bf87-4247-93c9-86e639c1886b}" SpecialFunc="None">
    <Declaration><![CDATA[(*********************************** G.D S.p.A. - Technical Department ***********************************
============= PROGRAM INFO ============
FOLDER:             TBD
MACHINES INVOLVED:  TBD 

============= DESCRIPTION =============
Machine drives common configurations

============= REVISIONS ===============
Date		Version	 	Author      	Description             
----------	-------		------------  	--------------------------------------------
2019/07/24 	0000.00	 	M.Grasso		Creation of the PRG

**********************************************************************************************************)

PROGRAM csp_transfer_main_safety_drives_commonConfiguration
VAR
	prc:					process;
	prc_path:				STRING;
	
	sig:					safety_integrated_group;
	rack_smes_sis:			safety_integrated_series;
	standalone_smes_sis:	safety_integrated_series;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[_read_var_input();

_object_manager();

IF NOT objects_running()
THEN
	RETURN;	
END_IF

_read_process_image();

_mode_manager();

CASE process_get_mode(prc) OF
	MODE_ABSENT,
	MODE_INACTIVE:
		RETURN;
	MODE_TEST:
		_handle_process_test();
END_CASE

_set_runtime_properties();

(********************************* BODY *********************************)
//IF descriptor_get_reset_edge(prc.descriptor)
//THEN
	safety_integrated_series_close(rack_smes_sis);
	//safety_integrated_series_close(standalone_smes_sis);
//END_IF
(************************************************************************)

_handle_messages();

_write_output();]]></ST>
    </Implementation>
    <Action Name="_handle_messages" Id="{45cffad5-f328-46e6-9e6f-6c46d895272b}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_handle_process_test" Id="{59b38669-8bcd-4ae2-a5ba-7e72da544a70}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_mode_manager" Id="{f8404206-8336-4d38-9b24-ba76e5ffa98e}">
      <Implementation>
        <ST><![CDATA[IF process_mode_req_is_pending(prc)
THEN
    process_apply_mode_req_first_step(prc);
    CASE process_get_mode(prc) OF
        MODE_TO_ABSENT:
			;
        MODE_TO_INACTIVE:
			;
        MODE_TO_TEST:
			;
        MODE_TO_OPERATIONAL:
			;
    END_CASE
    process_apply_mode_req_second_step(prc);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="_object_manager" Id="{77bdab9d-6211-4c09-81a9-4069ea9da54a}">
      <Implementation>
        <ST><![CDATA[IF objects_initialization()
THEN
	sub_process_init(
		object_name					:= 'csp_transfer_main_safety_drives_commonConfiguration.prc', 
		process						:= csp_transfer_main_safety_drives.prc, 
		CONVERSION_this				:= prc);
		
	prc_path 						:= process_get_path(prc);
	
	
	(* SIG *)
	safety_integrated_group_init(
		object_name					:=	CONCAT(prc_path, '_sig'),
		controller					:=	csp_transfer_main_safety_interface.SPLC40210_sic,
		process						:=	prc,
		CONVERSION_this				:=	sig);	
		
	(* DRIVES RACK SERIES *)
	safety_integrated_series_init(
		object_name					:=	CONCAT(prc_path, '_rack_smes_sis'),
		_type						:=	SAFETY_INTEGRATED_SERIES_TYPE_RESET,
		discrepancy_active			:=	FALSE,
		forced_open_active			:=	TRUE,
		process						:=	prc,
		conversion_this				:=	rack_smes_sis);

	safety_integrated_series_add_safety_integrated_group(
		group						:=	sig,
		CONVERSION_this				:=	rack_smes_sis);

	safety_integrated_series_add_safety_integrated_series(
		series_active				:=	TRUE,
		series_polarity_direct		:=	TRUE,
		contact						:=	csp_transfer_main_safety_drives_PS41020.sis,
		CONVERSION_this				:=	rack_smes_sis);	

	(* STANDALONE DRIVES SERIES *)
	safety_integrated_series_init(
		object_name					:=	CONCAT(prc_path, '_standalone_smes__sis'),
		_type						:=	SAFETY_INTEGRATED_SERIES_TYPE_RESET,
		discrepancy_active			:=	FALSE,
		forced_open_active			:=	TRUE,
		process						:=	prc,
		conversion_this				:=	standalone_smes_sis);

	safety_integrated_series_add_safety_integrated_group(
		group						:=	sig,
		CONVERSION_this				:=	standalone_smes_sis);

	safety_integrated_series_add_safety_integrated_series(
		series_active				:=	TRUE,
		series_polarity_direct		:=	TRUE,
		contact						:=	csp_transfer_main_safety_emergency.delayed_sis,
		CONVERSION_this				:=	standalone_smes_sis);		
	
END_IF

IF objects_running()
THEN
	process_cycle(prc);
	
	safety_integrated_group_cycle(sig);
	safety_integrated_series_cycle(rack_smes_sis);
	safety_integrated_series_cycle(standalone_smes_sis);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="_read_process_image" Id="{616c5f84-b0eb-48ed-a3f1-f9604fe80508}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_read_var_input" Id="{6bef47fc-99b7-4ad3-832d-f1f4ad47d1f7}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_set_runtime_properties" Id="{d27b314b-a1ba-49fd-afc9-6791e9855c52}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_write_output" Id="{12d0865c-7283-4912-82bf-6f52f5adef6d}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>