<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="csp_case_main_safety_drives_SD12000" Id="{a54af5f4-4068-4ae4-921e-334504f0a2e4}" SpecialFunc="None">
    <Declaration><![CDATA[
(*********************************** G.D S.p.A. - Technical Department ***********************************
============= PROGRAM INFO ============
FOLDER:             TBD
MACHINES INVOLVED:  TBD 

============= DESCRIPTION =============

============= REVISIONS ===============
Date		Version	 	Author      	Description             
----------	-------		------------  	--------------------------------------------
2019/04/24 	0000.00	 	M.Grasso		Creation of the PRG

**********************************************************************************************************)
(*$R 
	process_ref:= prc; 
$*)
PROGRAM csp_case_main_safety_drives_SD12000
VAR
	prc:					process;
	prc_path:				STRING;	

	sig:												safety_integrated_group;
	chA_smes_sis:										safety_integrated_series;
	chB_smes_sis:										safety_integrated_series;
	safety_integrated_series_close_dvr_chA: 			BOOL;
	safety_integrated_series_close_dvr_chB: 			BOOL;

	shutdown_chA AT %Q* 								:BOOL := TRUE;
	shutdown_chB AT %Q* 								:BOOL := TRUE;
END_VAR


]]></Declaration>
    <Implementation>
      <ST><![CDATA[_read_var_input();

_objects_manager();

IF NOT objects_running()
THEN
	RETURN;	
END_IF

_read_process_image();

_mode_manager();

//safety_integrated_series_close(chA_smes_sis);
//safety_integrated_series_close(chB_smes_sis);

IF  safety_integrated_series_get_mode (chA_smes_sis) = MODE_ABSENT
	OR
	safety_integrated_series_get_mode(chA_smes_sis) = MODE_INACTIVE
	THEN
		shutdown_chA := TRUE;
	ELSE
		shutdown_chA := FALSE;
END_IF

IF  safety_integrated_series_get_mode (chB_smes_sis) = MODE_ABSENT
	OR
	safety_integrated_series_get_mode(chB_smes_sis) = MODE_INACTIVE
	THEN
		shutdown_chB := TRUE;
	ELSE
		shutdown_chB := FALSE;
END_IF

CASE process_get_mode(prc) OF
	MODE_ABSENT,
	MODE_INACTIVE:
		RETURN;
	MODE_TEST:
		;
END_CASE

_set_runtime_properties();

(********************************* BODY *********************************)
IF NOT safety_integrated_group_is_running(sig)
		THEN
			safety_integrated_group_run(sig);
END_IF
safety_integrated_series_close(chA_smes_sis);
safety_integrated_series_close(chB_smes_sis);
safety_integrated_series_close_dvr_chA := safety_integrated_series_is_safely_closed(chA_smes_sis);
safety_integrated_series_close_dvr_chB := safety_integrated_series_is_safely_closed(chB_smes_sis);
(*
IF NOT framework_is_local_simulated()
THEN
	IF	NOT soe_drive_ethercat_state_is_op(csp_case_main_drives.SD12000_drv)
		OR
		(
			safety_integrated_series_get_mode(chA_smes_sis) = MODE_ABSENT
			AND
			safety_integrated_series_get_mode(chB_smes_sis) = MODE_ABSENT
		)
	THEN
		safety_integrated_group_stop(sig);
	ELSE
		IF NOT safety_integrated_group_is_running(sig)
		THEN
			safety_integrated_group_run(sig);
		END_IF
	END_IF
END_IF	

*)
(************************************************************************)

_handle_messages();

_write_output();]]></ST>
    </Implementation>
    <Action Name="_handle_messages" Id="{b3fae169-9a94-481b-984b-e5abcfc9172c}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_handle_process_test" Id="{68628355-bd14-4ab2-9246-e6d2312f0dfe}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_mode_manager" Id="{b4a57ea6-8971-4847-9688-36ca9266107f}">
      <Implementation>
        <ST><![CDATA[IF process_mode_req_is_pending(prc)
THEN
    process_apply_mode_req_first_step(prc);
    CASE process_get_mode(prc) OF
        MODE_TO_ABSENT:
			;
        MODE_TO_INACTIVE:
			;
        MODE_TO_TEST:
			;
        MODE_TO_OPERATIONAL:
			;
    END_CASE
    process_apply_mode_req_second_step(prc);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="_objects_manager" Id="{1680df81-37be-4a65-b75e-7e1b16357186}">
      <Implementation>
        <ST><![CDATA[IF objects_initialization()
THEN
	sub_process_init(
		object_name					:= 'csp_case_main_safety_drives_SD12000.prc', 
		process						:= csp_case_main_safety_drives.prc, 
		CONVERSION_this				:= prc);
		
	prc_path 						:= process_get_path(prc);

	safety_integrated_group_init(
        object_name				:=	CONCAT(prc_path, '_sig'), 
		controller				:=	csp_case_main_safety_interface.SPLC5000_sic,
        process					:=	prc,
        CONVERSION_this			:=	sig);

	(* Channel A SMES series *)
	safety_integrated_series_init(
		object_name				:=	CONCAT(prc_path, '_chA_smes_sis'), 
		_type					:=	SAFETY_INTEGRATED_SERIES_TYPE_NO_RESET,
		discrepancy_active		:=	TRUE,
		forced_open_active		:=	TRUE,
		process					:=	prc,
		CONVERSION_this			:=	chA_smes_sis);

	safety_integrated_series_add_safety_integrated_group(
		group					:=	sig,
		CONVERSION_this			:=	chA_smes_sis);

	safety_integrated_series_add_safety_integrated_series(
		series_active			:=	TRUE,
		series_polarity_direct	:=	TRUE,
		contact					:=	csp_case_main_safety_drives_commonConfiguration.rack_smes_sis, (*Marco : To be checked*)
		CONVERSION_this			:=	chA_smes_sis);
		
	(* Channel B SMES series *)
	safety_integrated_series_init(
		object_name				:=	CONCAT(prc_path, '_chB_smes_sis'), 
		_type					:=	SAFETY_INTEGRATED_SERIES_TYPE_NO_RESET,
		discrepancy_active		:=	TRUE,
		forced_open_active		:=	TRUE,
		process					:=	prc,
		CONVERSION_this			:=	chB_smes_sis);

	safety_integrated_series_add_safety_integrated_group(
		group					:=	sig,
		CONVERSION_this			:=	chB_smes_sis);
		
	safety_integrated_series_add_safety_integrated_series(
		series_active			:=	TRUE,
		series_polarity_direct	:=	TRUE,
		contact					:=	csp_case_main_safety_drives_commonConfiguration.rack_smes_sis, (*Marco : To be checked*)
		CONVERSION_this			:=	chB_smes_sis);
		
END_IF

IF objects_running()
THEN
	process_cycle(prc);
  	safety_integrated_group_cycle(sig);
	safety_integrated_series_cycle(chA_smes_sis);
	safety_integrated_series_cycle(chB_smes_sis);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="_read_process_image" Id="{d1c206b2-6f89-41e2-a351-282f991374aa}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_read_var_input" Id="{65c3b600-0a3e-45ee-b37e-0092607e5d60}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_set_runtime_properties" Id="{bd82120a-e29d-47ee-86f9-a23e0c0681bd}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_write_output" Id="{ac86fdc8-4535-478c-9c69-44d418298bb6}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>