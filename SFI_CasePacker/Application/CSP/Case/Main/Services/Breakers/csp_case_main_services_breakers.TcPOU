<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="csp_case_main_services_breakers" Id="{b40dcc05-4e8a-4c3b-92e9-1ea12e76984d}" SpecialFunc="None">
    <Declaration><![CDATA[(*********************************** G.D S.p.A. - Technical Department ***********************************
============= PROGRAM INFO ============
FOLDER:             TBD
MACHINES INVOLVED:  TBD 

============= DESCRIPTION =============

============= REVISIONS ===============
Date		Version	 	Author      	Description             
----------	-------		------------  	--------------------------------------------
2019/10/07 	0000.00	 	W.Gerstner		Creation of the PRG

**********************************************************************************************************)
(*$R
	process_ref := prc;
$*)
PROGRAM csp_case_main_services_breakers
VAR
	prc:									process;
	prc_path:								STRING;
	
	psw1_monitor_di:						digital_input;
	psw2_monitor_di:						digital_input;
	psw3_monitor_di:						digital_input;
	psw4_monitor_di:						digital_input;
	
	psw5_monitor_di:						digital_input;
	psw6_monitor_di:						digital_input;
	
	
	psw1_monitor_dchk:						digital_check;
	psw2_monitor_dchk:						digital_check;
	psw3_monitor_dchk:						digital_check;
	psw4_monitor_dchk:						digital_check;
	
	psw5_monitor_dchk:						digital_check;
	psw6_monitor_dchk:						digital_check;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[_read_var_input();

_object_manager();

IF NOT objects_running()
THEN
	RETURN;	
END_IF

_read_process_image();

_mode_manager();

CASE process_get_mode(prc) of
	MODE_ABSENT,
	MODE_INACTIVE:
		RETURN;
	MODE_TEST:
		_handle_process_test();
END_CASE

_set_runtime_properties();

(********************************* BODY *********************************)

(************************************************************************)

_handle_messages();

_write_output();]]></ST>
    </Implementation>
    <Action Name="_handle_messages" Id="{032a3b97-3a13-4e6e-bae5-b62a790c43f2}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_handle_process_test" Id="{913fe146-5701-4f8d-a2bf-a6876d86f240}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_mode_manager" Id="{44d1b694-ac82-453a-b077-3d3bb7fcb5a9}">
      <Implementation>
        <ST><![CDATA[IF process_mode_req_is_pending(prc)
THEN
    process_apply_mode_req_first_step(prc);
    CASE process_get_mode(prc) OF
        MODE_TO_ABSENT:
			;
        MODE_TO_INACTIVE:
			;
        MODE_TO_TEST:
			;
        MODE_TO_OPERATIONAL:
			;
    END_CASE
    process_apply_mode_req_second_step(prc);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="_object_manager" Id="{6e08ef2c-d751-458c-a45b-f25edb11c262}">
      <Implementation>
        <ST><![CDATA[IF objects_initialization()
THEN
	sub_process_init(
		object_name						:= 'csp_case_main_services_breakers.prc', 
		process							:= csp_case_main_services.prc, 
		CONVERSION_this					:= prc);
		
	prc_path 							:= process_get_path(prc);
	
	(* INPUTS *)
	digital_input_init(
		object_name:= CONCAT(prc_path, '_psw1_monitor_di'), 
		polarity_direct:= TRUE, 
		process:= prc, 
		CONVERSION_this:= psw1_monitor_di);
		
	digital_input_init(
		object_name:= CONCAT(prc_path, '_psw2_monitor_di'), 
		polarity_direct:= TRUE, 
		process:= prc, 
		CONVERSION_this:= psw2_monitor_di);
		
	digital_input_init(
		object_name:= CONCAT(prc_path, '_psw3_monitor_di'), 
		polarity_direct:= TRUE, 
		process:= prc, 
		CONVERSION_this:= psw3_monitor_di);
		
	digital_input_init(
		object_name:= CONCAT(prc_path, '_psw4_monitor_di'), 
		polarity_direct:= TRUE, 
		process:= prc, 
		CONVERSION_this:= psw4_monitor_di);
		
	digital_input_init(
		object_name:= CONCAT(prc_path, '_psw5_monitor_di'), 
		polarity_direct:= TRUE, 
		process:= prc, 
		CONVERSION_this:= psw5_monitor_di);
		
	digital_input_init(
		object_name:= CONCAT(prc_path, '_psw6_monitor_di'), 
		polarity_direct:= TRUE, 
		process:= prc, 
		CONVERSION_this:= psw6_monitor_di);
		
		
	(* DIGITAL CHECKS *)
	digital_check_and_message_init(
		object_name					:= CONCAT(prc_path, '_psw1_monitor_dchk'), 
		alarm_if_input_off			:= FALSE, 
		alarm_delay					:= 0, 
		enabled_at_powerup			:= TRUE, 
		individual_reset			:= FALSE, 
		machine_reaction			:= MACHINE_REACTION_EMPTY_STOP_IN_PHASE_ONE, 
		typology					:= MESSAGE_TYPOLOGY_ABNORMAL, 
		process						:= prc, 
		CONVERSION_this				:= psw1_monitor_dchk);
		
	digital_check_add_di(
		di							:= psw1_monitor_di, 
		CONVERSION_this				:= psw1_monitor_dchk);
		
		
	digital_check_and_message_init(
		object_name					:= CONCAT(prc_path, '_psw2_monitor_dchk'), 
		alarm_if_input_off			:= FALSE, 
		alarm_delay					:= 0, 
		enabled_at_powerup			:= TRUE, 
		individual_reset			:= FALSE, 
		machine_reaction			:= MACHINE_REACTION_EMPTY_STOP_IN_PHASE_ONE, 
		typology					:= MESSAGE_TYPOLOGY_ABNORMAL, 
		process						:= prc, 
		CONVERSION_this				:= psw2_monitor_dchk);
		
	digital_check_add_di(
		di							:= psw2_monitor_di, 
		CONVERSION_this				:= psw2_monitor_dchk);
		
		
	digital_check_and_message_init(
		object_name					:= CONCAT(prc_path, '_psw3_monitor_dchk'), 
		alarm_if_input_off			:= FALSE, 
		alarm_delay					:= 0, 
		enabled_at_powerup			:= TRUE, 
		individual_reset			:= FALSE, 
		machine_reaction			:= MACHINE_REACTION_EMPTY_STOP_IN_PHASE_ONE, 
		typology					:= MESSAGE_TYPOLOGY_ABNORMAL, 
		process						:= prc, 
		CONVERSION_this				:= psw3_monitor_dchk);
		
	digital_check_add_di(
		di							:= psw3_monitor_di, 
		CONVERSION_this				:= psw3_monitor_dchk);
		
		
	digital_check_and_message_init(
		object_name					:= CONCAT(prc_path, '_psw4_monitor_dchk'), 
		alarm_if_input_off			:= FALSE, 
		alarm_delay					:= 0, 
		enabled_at_powerup			:= TRUE, 
		individual_reset			:= FALSE, 
		machine_reaction			:= MACHINE_REACTION_EMPTY_STOP_IN_PHASE_ONE, 
		typology					:= MESSAGE_TYPOLOGY_ABNORMAL, 
		process						:= prc, 
		CONVERSION_this				:= psw4_monitor_dchk);
		
	digital_check_add_di(
		di							:= psw4_monitor_di, 
		CONVERSION_this				:= psw4_monitor_dchk);
		
	
		
	digital_check_and_message_init(
		object_name					:= CONCAT(prc_path, '_psw5_monitor_dchk'), 
		alarm_if_input_off			:= FALSE, 
		alarm_delay					:= 0, 
		enabled_at_powerup			:= TRUE, 
		individual_reset			:= FALSE, 
		machine_reaction			:= MACHINE_REACTION_EMPTY_STOP_IN_PHASE_ONE, 
		typology					:= MESSAGE_TYPOLOGY_ABNORMAL, 
		process						:= prc, 
		CONVERSION_this				:= psw5_monitor_dchk);
		
	digital_check_add_di(
		di							:= psw5_monitor_di, 
		CONVERSION_this				:= psw5_monitor_dchk);
		
	digital_check_and_message_init(
		object_name					:= CONCAT(prc_path, '_psw6_monitor_dchk'), 
		alarm_if_input_off			:= FALSE, 
		alarm_delay					:= 0, 
		enabled_at_powerup			:= TRUE, 
		individual_reset			:= FALSE, 
		machine_reaction			:= MACHINE_REACTION_EMPTY_STOP_IN_PHASE_ONE, 
		typology					:= MESSAGE_TYPOLOGY_ABNORMAL, 
		process						:= prc, 
		CONVERSION_this				:= psw6_monitor_dchk);
		
	digital_check_add_di(
		di							:= psw6_monitor_di, 
		CONVERSION_this				:= psw6_monitor_dchk);
	
		
END_IF

IF objects_running()
THEN
	process_cycle(prc);
	digital_check_cycle(psw1_monitor_dchk);
	digital_check_cycle(psw2_monitor_dchk);
	digital_check_cycle(psw3_monitor_dchk);
	digital_check_cycle(psw4_monitor_dchk);
	digital_check_cycle(psw5_monitor_dchk);
	digital_check_cycle(psw6_monitor_dchk);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="_read_process_image" Id="{57ee764c-208a-4c23-84cc-a96fde868dfe}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_read_var_input" Id="{0a7aeda9-7a9d-4449-b08b-6050b9fe05bc}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_set_runtime_properties" Id="{59b94ced-f894-4f62-a297-65cf62d9f8ae}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_write_output" Id="{7d6e314f-9af0-45ff-b7f6-3e718a205906}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>